// Copyright 2019-2020 LinkedIn Corporation. All rights reserved.
// Licensed under the BSD-2 Clause license.
// See LICENSE in the project root for license information.

plugins {
  id "com.diffplug.spotless" version "5.8.2"
  id 'com.github.johnrengelman.shadow' version '2.0.4'
  id "org.shipkit.java" version "2.3.4"
}

allprojects {
  group = 'com.linkedin.transport'
  apply plugin: "com.diffplug.spotless"
  apply plugin: 'idea'
  apply plugin: 'eclipse'

  spotless {
    enforceCheck true
    groovyGradle {
      target '**/*.gradle'
      greclipse().configFile("${rootDir}/docs/codestyle-eclipse.xml")
    }
    format 'markdown', {
      target 'CONTRIBUTING.md', 'README.md', 'docs/*.md'
      targetExclude 'docs/release-notes.md'
      prettier()
    }
  }
}

if (project.hasProperty('overrideBuildEnvironment')) {
  // The property is automatically passed to the Gradle build when the
  // project is built at LinkedIn. The property contains the file
  // path to a script plugin that 'adapts' this OS project to
  // LinkedIn. In order to adapt the project, we need to apply this
  // script plugin:
  apply from: project.overrideBuildEnvironment
} else {
  // If the property is not set the project is built outside of
  // LinkedIn.  Applying default build logic for an OS build:
  apply from: "defaultEnvironment.gradle"
}

subprojects {
  configurations {
    all {
      // Transport as a library should only expose slf4j-api to its
      // consumers and should not keep any SLF4J bindings in its
      // dependency graph. Quote from http://www.slf4j.org/faq.html#maven2
      //
      // "Thus, as far as your users are concerned you are exporting
      // slf4j-api as a transitive dependency of your library, but not
      // any SLF4J-binding or any underlying logging system."  Our
      // dependencies (e.g. hadoop-common) do bring in slf4j-log4j12
      // in their dependency graph so we exclude them here.
      exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    }
  }

  plugins.withType(JavaPlugin) {
    dependencies {
      testCompile 'org.testng:testng:6.11'
      testCompile 'org.slf4j:slf4j-simple:1.7.25'
    }
    test {
      useTestNG()
    }
    spotless {
      java {
        eclipse().configFile("${rootDir}/docs/codestyle-eclipse.xml")
        licenseHeaderFile file("${rootDir}/gradle/license/LICENSE_HEADER")
      }
    }
  }
}
